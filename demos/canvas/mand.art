@board("canvas")
var screen = new KCanvas(w:500, h:500, scale:1)

var palette = [BLACK,RED,GREEN,BLUE,WHITE]
@type('start',setup)
fun setup() {
    var grid = MDArray([500,500])
    grid.fill(0)
    var pixels = grid.map(@(v,x,y) => mand(remap(x,0,500,-4,4), remap(y,0,500,-4,4)))
    var colors = pixels.map(@px => palette[px mod palette.length])
    colors.each(@(c,x,y) => screen.setPixel([x,y],c))
}

fun mand(cx, cy) {
    //`z = z*z + c`
    var iter = 0
    var maxiter = 50
    var c = [cx,cy]
    var z0 = [0,0]
    //do z' = z^2 +c  until abs(z)>2 or max of 50 times
    var done = false
    range(maxiter).each(@()=> {
        if done return false
        let z1 = cadd(cmul(z0,z0), c)
        iter = iter + 1
        if cabs(z1) > (2) done := true
        if iter > maxiter done := true
        z0 = z1
    })
    return iter
}

fun cadd(A,B) {
    return [ A[0] + B[0], A[1] + B[1] ]
}
fun cabs(A) {
    return Math.sqrt((A[0] * A[0]) + (A[1] * A[1]))
}
fun cmul(x,y) {
    return [
        x[0]*y[0] - x[1]*y[1],
        x[0]*y[1] - x[1]*y[0]
    ]
}
