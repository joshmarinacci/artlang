var NO  = 0
var YES = 1
var UNKNOWN = 2
var PAL = [WHITE, BLACK, GREEN]

var screen = new KSceneGraph(w:100, h:100, scale:5)
var image = [0,1,1,
             0,1,0,
             1,1,1].reshape([3,3])
//every value in the image will be 0 for empty or 1 for pixel is there.
var board = []
var game_text = Label(x:50, y:90, text:"correct 0", color:BLACK)

@type('start',setup)
fun setup() {
    print("doing setup")
    setup_board()
    setup_input()
}

//click rect to cycle it through ?, x, o:  don't know, marked filled, marked empty
//this implies we need a scenegraph of rects. make board be an array of objects with state
//plus rects at the right places, then just draw them with a single call

fun setup_board() {
    var s = 10
    var off = [0,0]
    board = image.map(@(v,i,j) => {
        var cell = Rect(x:(i*s) + off[0] + 1, y:(j*s) + off[1] + 1, w:s-2, h:s-2, color: PAL[0])
        cell.state = UNKNOWN
        cell.color = PAL[cell.state]
        cell.type = 'cell'
        return cell
    })
    screen.shapes.push_end_all(board)

    var check_button = Rect(x:0,y:80, w:40, h:20)
    check_button.color = RED
    check_button.type = 'button'
    var check_text = Label(x:5, y:90, text:"check", color:BLACK)
    screen.shapes.push_end(check_button)
    screen.shapes.push_end(check_text)

    // make clues for the rows
    range(3).map(@(j) => {
        let row = image[?,j]
        let clues = [0]
        row.each(@(v,i) => {
            if v == 0 clues.push_end(0)
            if v == 1 clues.push_end(clues.pop_end()+1)
        })
        clues = clues.filter(@v => not (v == 0))
        var pos = [35,10]
        var labs = clues.map(@(v,i) => {
            Label(xy:pos+([i,j]*s), text:v, color:BLACK)
        })
        screen.shapes.push_end_all(labs)
    })
    // make clues for the columns
    range(3).map(@(i) => {
        let col = image[i,?]
        let clues = [0]
        col.each(@(v,i) => {
            if v == 0 clues.push_end(0)
            if v == 1 clues.push_end(clues.pop_end()+1)
        })
        clues = clues.filter(@v => not (v == 0))
        var pos = [2,40]
        var labs = clues.map(@(v,j) => {
            Label(xy:pos+[i,j]*s, text:v, color:BLACK)
        })
        screen.shapes.push_end_all(labs)
    })
    screen.shapes.push_end(game_text)
    screen.redraw()
}

fun setup_input() {
    screen.onClick(@(shapes) => {
        if(shapes.length > 0) {
            print("shapes",shapes)
            var sh = shapes[0]
            if(sh.type == 'cell') {
                sh.state = (sh.state-1)
                if(sh.state < 0) sh.state = UNKNOWN
                sh.color = PAL[sh.state]
                screen.redraw()
            }
            if(sh.type == 'button') {
                print('checking for the win')
                var correct = 0
                var wrong = 0
                board.each(@(cell,i,j) => {
                    print("checking",cell.state, image[i,j])
                    if(cell.state == image[i,j]) {
                        correct = correct+1
                    } else {
                        wrong = wrong + 1
                    }
                })
                print("got right",correct,"wrong",wrong)
                game_text.text = ("correct " + correct)
                screen.redraw()
            }
        }
    })
}
