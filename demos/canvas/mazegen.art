@board("canvas")
var screen = new KSceneGraph(w:200, h:200, scale:4)
var grid

//directions up, right, down, left
var directions = [ [0,-1],
                   [1, 0],
                   [0, 1],
                  [-1, 0]]
var W = 20
var H = 20
var S = 10
var MAX_CYCLES = 1500

var count = 0

fun connectCells(start,end) {
    var gap = S/2
    var line = Line(
        start: (start*S) +gap,
        end:   (end*S)   + gap,
        color:GREEN,
        lineWidth:5)
    screen.shapes.push_end(line)
    screen.redraw()
}


var NONE = [-1,-1]
fun rand_search(pos) {
    grid[pos] = 1
    var next := find_adjacent(pos)
    while (true) {
        count += 1
        if count > MAX_CYCLES return NONE
        if next == NONE return NONE
        connectCells(pos,next)
        rand_search(next)
        next := find_adjacent(pos)
    }
}

fun is_valid_index(pos) {
    if pos[0] < 0 return false
    if pos[1] < 0 return false
    if pos[0] >= W return false
    if pos[1] >= H return false
    return true
}

fun find_adjacent(pos) {
    var dirs = directions.shuffle()
    while(dirs.length > 0) {
        var dir = dirs.pop_end()
        var pos2 = pos + dir
        if(is_valid_index(pos2)) {
            if(grid[pos2] == 0) {
                return pos2
            }
        }
    }
    return NONE
}

@type('start',setup)
fun setup() {
    grid = MDArray([W,H])
    grid.fill(0)
    rand_search([randi(W), randi(H)])
}

