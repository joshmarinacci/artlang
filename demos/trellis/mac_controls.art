@board("trellis")

var LEFT13 = [0,0]
var LEFT23 = [1,0]
var RIGHT23 = [2,0]
var RIGHT13 = [3,0]
var THIRDS = [LEFT13, LEFT23, RIGHT13, RIGHT23]

var LEFT12 = [0,1]
var RIGHT12 = [1,1]
var HALVES = [LEFT12, RIGHT12]

var UL = [0,2]
var LL = [0,3]
var UR = [1,2]
var LR = [1,3]
var QUADS = [UL, LL, UR, LR]

var PLAYPAUSE   = [7,0]
var VOLUME_DOWN = [5,3]
var VOLUME_UP   = [7,3]
var VOLUME_MUTE = [6,3]
var VOLUMES =[ VOLUME_DOWN, VOLUME_MUTE, VOLUME_UP]

var TAN = KeyColor(r:1.0, g:0.8, b:0.1)
var AQUA = KeyColor(r:0, g:1.0, b:0.7)

@type("start",setup)
fun setup() {
    print("doing the setup")
    device.leds.fill(BLACK)
    wait(0.2)
    device.leds.fill(RED)
    wait(0.2)
    device.leds.fill(BLACK)

    THIRDS.each(@(pos,i) => { device.leds.set(pos,GREEN)  })
    HALVES.each(@(pos,i) => { device.leds.set(pos,YELLOW) })
     QUADS.each(@(pos,i) => { device.leds.set(pos,TAN)    })
    device.leds.set(PLAYPAUSE, RED)
    VOLUMES.each(@(pos,i) => { device.leds.set(pos,AQUA)    })
    device.leds.set(VOLUME_MUTE, KeyColor(r:0.0, g:0.4, b:1.0))


}

@type("loop",loop)
fun loop() {
    device.buttons.pressed_list.each(@(pos,i) => {
        if is_true(pos == LEFT13)   device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.D)
        if is_true(pos == LEFT23)   device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.E)
        if is_true(pos == RIGHT23)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.T)
        if is_true(pos == RIGHT13)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.G)
        if is_true(pos == LEFT12)   device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.LEFT_ARROW)
        if is_true(pos == RIGHT12)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.RIGHT_ARROW)

        if is_true(pos == UL)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.U)
        if is_true(pos == LL)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.J)
        if is_true(pos == UR)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.I)
        if is_true(pos == LR)  device.keyboard.send(Keycode.CONTROL, Keycode.OPTION, Keycode.K)

        if is_true(pos == VOLUME_UP)  device.cc.send(ConsumerControlCode.VOLUME_INCREMENT)
        if is_true(pos == VOLUME_MUTE)  device.cc.send(ConsumerControlCode.MUTE)
        if is_true(pos == VOLUME_DOWN)  device.cc.send(ConsumerControlCode.VOLUME_DECREMENT)

        if is_true(pos == PLAYPAUSE) device.cc.send(ConsumerControlCode.PLAY_PAUSE)

    })
}
